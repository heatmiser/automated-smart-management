---
- hosts: "{{ HOSTS | default('control[0]') }}"
  connection: local
  vars:
    tower_infra_workloads:
      - redhat_cop.tower_configuration.inventories
      - redhat_cop.tower_configuration.inventory_sources
      - redhat_cop.tower_configuration.job_templates
      - redhat_cop.tower_configuration.projects
    #tower_hostname: "{{ lookup('env', 'TOWER_HOST') }}"
    tower_hostname: "{{ hostvars[inventory_hostname].ansible_fqdn }}"
    tower_validate_certs: false

  tasks:
    - name: Slurp dynamic_development_source_vars.yaml
      slurp: src=files/dynamic_development_source_vars.yaml
      register: dynamic_development_source_vars_slurped

    - set_fact:
        dynamic_development_source_vars: "{{ dynamic_development_source_vars_slurped['content'] | b64decode }}"

    # Gather EC2 metadata facts
    - amazon.aws.ec2_metadata_facts:
  
    - set_fact:
        workshop_ec2_region: "{{ ansible_ec2_instance_identity_document_region }}"

    - debug:
        msg: "{{ dynamic_development_source_vars }}"   
    - name: deploy tower_infra workloads
      include_role:
        name: "{{ tower_infra_vars }}"
      loop: "{{ tower_infra_workloads }}"
      loop_control:
        loop_var: tower_infra_vars

    - name: update tower credential for ansible tower
      awx.awx.tower_credential:
        name: "Tower Credential"
        organization: Default
        credential_type: "Ansible Tower"
        inputs:
          #host: "{{ ansible_host }}"
          #username: admin
          #password: "{{admin_password}}"
          tower_username: admin
          #tower_password: "{{ lookup('env', 'AWX_HOST') }}"
          tower_host: "{{ lookup('env', 'AWX_HOST') }}"
          tower_verify_ssl: false
        update_secrets: no
